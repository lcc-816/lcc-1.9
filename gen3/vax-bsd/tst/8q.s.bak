.text
.globl _main
_main:.word 0x0
subl2 $56,sp
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
L1:moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _down,r2
addl3 r2,r1,r2
movl $1,r3
movl r3,(r2)
moval _up,r2
addl3 r2,r1,r1
movl r3,(r1)
L2:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval -4(fp),r1
movl (r1),r1
movl $15,r2
cmpl r1,r2; jlss L1
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
L5:moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _rows,r2
addl3 r2,r1,r1
movl $1,r2
movl r2,(r1)
L6:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval -4(fp),r1
movl (r1),r1
movl $8,r2
cmpl r1,r2; jlss L5
movl $0,r1
movl r1,0(sp)
moval _queens,r1
calls $0,(r1)
movl r0,r1
movl $0,r1
movl r1,r0; ret
.globl _queens
_queens:.word 0x40
subl2 $56,sp
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
L9:moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r3
moval _rows,r4
addl3 r4,r3,r3
movl (r3),r3
movl $0,r4
cmpl r3,r4; jeql L13
moval 4(ap),r3
movl (r3),r3
subl3 r3,r1,r5
ashl r2,r5,r5
moval _up+28,r6
addl3 r6,r5,r5
movl (r5),r5
cmpl r5,r4; jeql L13
addl3 r3,r1,r1
ashl r2,r1,r1
moval _down,r2
addl3 r2,r1,r1
movl (r1),r1
cmpl r1,r4; jeql L13
moval -4(fp),r1
movl (r1),r1
moval 4(ap),r2
movl (r2),r2
addl3 r2,r1,r3
movl $2,r4
ashl r4,r3,r3
moval _down,r5
addl3 r5,r3,r3
movl $0,r5
movl r5,(r3)
subl3 r2,r1,r2
ashl r4,r2,r2
moval _up+28,r3
addl3 r3,r2,r2
movl r5,(r2)
ashl r4,r1,r1
moval _rows,r2
addl3 r2,r1,r1
movl r5,(r1)
moval 4(ap),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _x,r2
addl3 r2,r1,r1
moval -4(fp),r2
movl (r2),r2
movl r2,(r1)
moval 4(ap),r1
movl (r1),r1
movl $7,r2
cmpl r1,r2; jneq L17
moval _print,r1
calls $0,(r1)
movl r0,r1
moval L18,r1
jmp (r1)
L17:moval 4(ap),r1
movl (r1),r1
movl $1,r2
addl3 r2,r1,r1
movl r1,0(sp)
moval _queens,r1
calls $0,(r1)
movl r0,r1
L18:moval -4(fp),r1
movl (r1),r1
moval 4(ap),r2
movl (r2),r2
addl3 r2,r1,r3
movl $2,r4
ashl r4,r3,r3
moval _down,r5
addl3 r5,r3,r3
movl $1,r5
movl r5,(r3)
subl3 r2,r1,r2
ashl r4,r2,r2
moval _up+28,r3
addl3 r3,r2,r2
movl r5,(r2)
ashl r4,r1,r1
moval _rows,r2
addl3 r2,r1,r1
movl r5,(r1)
L13:L10:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval -4(fp),r1
movl (r1),r1
movl $8,r2
cmpl r1,r2; jlss L9
ret
.globl _print
_print:.word 0x0
subl2 $60,sp
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
L20:moval L24,r1
movl r1,0(sp)
moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _x,r2
addl3 r2,r1,r1
movl (r1),r1
movl $49,r2
addl3 r2,r1,r1
movl r1,4(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L21:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval -4(fp),r1
movl (r1),r1
movl $8,r2
cmpl r1,r2; jlss L20
moval L25,r1
movl r1,0(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
ret
.data
.globl _x
.align 2; _x:.space 32
.globl _rows
.align 2; _rows:.space 32
.globl _down
.align 2; _down:.space 60
.globl _up
.align 2; _up:.space 60
.text 1
L25:.byte 10
.byte 0
L24:.byte 37
.byte 99
.byte 32
.byte 0
