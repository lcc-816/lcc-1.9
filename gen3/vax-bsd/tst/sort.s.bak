.data
.globl _in
.align 2; _in:.long 10
.long 32
.long -1
.long 567
.long 3
.long 18
.long 1
.long -51
.long 789
.long 0
.text
.globl _main
_main:.word 0x0
subl2 $60,sp
moval _in,r1
movl r1,0(sp)
movl $10,r1
movl r1,4(sp)
moval _sort,r1
calls $0,(r1)
movl r0,r1
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
moval L4,r1
jmp (r1)
L1:moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _in,r2
addl3 r2,r1,r1
movl (r1),r1
movl r1,0(sp)
moval _putd,r1
calls $0,(r1)
movl r0,r1
movl $10,r1
movl r1,0(sp)
moval _putchar,r1
calls $0,(r1)
movl r0,r1
L2:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L4:moval -4(fp),r1
movl (r1),r1
movl r1,r1
movl $10,r2
cmpl r1,r2; jlssu L1
movl $0,r1
movl r1,r0; ret
.globl _putd
_putd:.word 0x0
subl2 $52,sp
moval 4(ap),r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jgeq L5
movl $45,r1
movl r1,0(sp)
moval _putchar,r1
calls $0,(r1)
movl r0,r1
moval 4(ap),r1
movl (r1),r2
mnegl r2,r2
movl r2,(r1)
L5:moval 4(ap),r1
movl (r1),r1
movl $10,r2
divl3 r2,r1,r1
movl $0,r2
cmpl r1,r2; jeql L7
moval 4(ap),r1
movl (r1),r1
movl $10,r2
divl3 r2,r1,r1
movl r1,0(sp)
moval _putd,r1
calls $0,(r1)
movl r0,r1
L7:moval 4(ap),r1
movl (r1),r1
movl $10,r2
divl3 r2,r1,r0; mull2 r2,r0; subl3 r0,r1,r1
movl $48,r2
addl3 r2,r1,r1
movl r1,0(sp)
moval _putchar,r1
calls $0,(r1)
movl r0,r1
ret
.globl _sort
_sort:.word 0x0
subl2 $60,sp
moval _xx,r1
moval 4(ap),r2
movl (r2),r2
movl r2,(r1)
movl r2,0(sp)
movl $0,r1
movl r1,4(sp)
moval 8(ap),r1
movl (r1),r2
movl $1,r3
subl3 r3,r2,r2
movl r2,(r1)
movl r2,8(sp)
moval _quick,r1
calls $0,(r1)
movl r0,r1
ret
.globl _quick
_quick:.word 0x0
subl2 $64,sp
moval 8(ap),r1
movl (r1),r1
moval 12(ap),r2
movl (r2),r2
cmpl r1,r2; jlss L9
ret
L9:moval 4(ap),r1
movl (r1),r1
movl r1,0(sp)
moval 8(ap),r1
movl (r1),r1
movl r1,4(sp)
moval 12(ap),r1
movl (r1),r1
movl r1,8(sp)
moval _partition,r1
calls $0,(r1)
movl r0,r1
moval -4(fp),r2
movl r1,(r2)
moval 4(ap),r1
movl (r1),r1
movl r1,0(sp)
moval 8(ap),r1
movl (r1),r1
movl r1,4(sp)
moval -4(fp),r1
movl (r1),r1
movl $1,r2
subl3 r2,r1,r1
movl r1,8(sp)
moval _quick,r1
calls $0,(r1)
movl r0,r1
moval 4(ap),r1
movl (r1),r1
movl r1,0(sp)
moval -4(fp),r1
movl (r1),r1
movl $1,r2
addl3 r2,r1,r1
movl r1,4(sp)
moval 12(ap),r1
movl (r1),r1
movl r1,8(sp)
moval _quick,r1
calls $0,(r1)
movl r0,r1
ret
.globl _partition
_partition:.word 0x0
subl2 $64,sp
moval 12(ap),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval -8(fp),r1
moval 8(ap),r2
movl (r2),r2
movl r2,(r1)
moval -4(fp),r2
movl (r1),r1
movl $2,r3
ashl r3,r1,r1
moval 4(ap),r3
movl (r3),r3
addl3 r3,r1,r1
movl (r1),r1
movl r1,(r2)
moval L12,r1
jmp (r1)
L11:moval 8(ap),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval L15,r1
jmp (r1)
L14:moval 8(ap),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L15:moval 8(ap),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval 4(ap),r2
movl (r2),r2
addl3 r2,r1,r1
movl (r1),r1
moval -4(fp),r2
movl (r2),r2
cmpl r1,r2; jlss L14
moval 12(ap),r1
movl (r1),r2
movl $1,r3
subl3 r3,r2,r2
movl r2,(r1)
moval L18,r1
jmp (r1)
L17:moval 12(ap),r1
movl (r1),r2
movl $1,r3
subl3 r3,r2,r2
movl r2,(r1)
L18:moval 12(ap),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval 4(ap),r2
movl (r2),r2
addl3 r2,r1,r1
movl (r1),r1
moval -4(fp),r2
movl (r2),r2
cmpl r1,r2; jgtr L17
moval 8(ap),r1
movl (r1),r1
moval 12(ap),r2
movl (r2),r2
cmpl r1,r2; jgeq L20
moval 8(ap),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval 4(ap),r3
movl (r3),r3
addl3 r3,r1,r1
movl r1,0(sp)
moval 12(ap),r1
movl (r1),r1
ashl r2,r1,r1
addl3 r3,r1,r1
movl r1,4(sp)
moval _exchange,r1
calls $0,(r1)
movl r0,r1
L20:L12:moval 8(ap),r1
movl (r1),r1
moval 12(ap),r2
movl (r2),r2
cmpl r1,r2; jlss L11
moval -8(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval 4(ap),r3
movl (r3),r3
addl3 r3,r1,r1
movl r1,0(sp)
moval 12(ap),r1
movl (r1),r1
ashl r2,r1,r1
addl3 r3,r1,r1
movl r1,4(sp)
moval _exchange,r1
calls $0,(r1)
movl r0,r1
moval 12(ap),r1
movl (r1),r1
movl r1,r0; ret
.globl _exchange
_exchange:.word 0x0
subl2 $64,sp
moval L22,r1
movl r1,0(sp)
moval 4(ap),r1
movl (r1),r1
movl r1,r1
moval _xx,r2
movl (r2),r2
movl r2,r2
subl3 r2,r1,r1
movl r1,r1
movl $4,r3
divl3 r3,r1,r1
movl r1,4(sp)
moval 8(ap),r1
movl (r1),r1
movl r1,r1
subl3 r2,r1,r1
movl r1,r1
divl3 r3,r1,r1
movl r1,8(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
moval -4(fp),r1
moval 4(ap),r2
movl (r2),r2
movl (r2),r3
movl r3,(r1)
moval 8(ap),r1
movl (r1),r1
movl (r1),r1
movl r1,(r2)
moval 8(ap),r1
movl (r1),r1
moval -4(fp),r2
movl (r2),r2
movl r2,(r1)
ret
.data
.globl _xx
.align 2; _xx:.space 4
.text 1
L22:.byte 101
.byte 120
.byte 99
.byte 104
.byte 97
.byte 110
.byte 103
.byte 101
.byte 40
.byte 37
.byte 100
.byte 44
.byte 37
.byte 100
.byte 41
.byte 10
.byte 0
