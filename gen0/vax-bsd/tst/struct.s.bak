progbeg argv=../rcc 
segment text
export addpoint
function addpoint type=struct point function(struct point,struct point) class=auto scope=GLOBAL
caller's parameter p1 type=struct point class=auto scope=PARAM offset=0 ref=0
callee's parameter p1 type=struct point class=auto scope=PARAM offset=0 ref=3000
caller's parameter p2 type=struct point class=auto scope=PARAM offset=8 ref=0
callee's parameter p2 type=struct point class=auto scope=PARAM offset=8 ref=2000
local 2 type=pointer to struct point class=auto scope=LOCAL offset=0 ref=1000
maxoffset=4
node#2 ADDRFP count=2 p1
node#4 INDIRI count=1 #2
node#6 ADDRFP count=1 p2
node#5 INDIRI count=1 #6
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
node#8 ADDRFP count=2 p1+4 (3)
node#10 INDIRI count=1 #8
node#12 ADDRFP count=1 p2+4 (4)
node#11 INDIRI count=1 #12
node#9 ADDI count=1 #10 #11
node'7 ASGNI count=0 #8 #9 4 4
node#3 ADDRLP count=1 2
node#2 INDIRP count=1 #3
node#5 ADDRFP count=1 p1
node#4 INDIRB count=1 #5
node'1 ASGNB count=0 #2 #4 8 4
node'1 RETV count=0
1:
end addpoint
export canonrect
function canonrect type=struct rect function(struct rect) class=auto scope=GLOBAL
caller's parameter r type=struct rect class=auto scope=PARAM offset=0 ref=0
callee's parameter r type=struct rect class=auto scope=PARAM offset=0 ref=16000
local 6 type=pointer to struct rect class=auto scope=LOCAL offset=0 ref=1000
local temp type=struct rect class=auto scope=LOCAL offset=4 ref=5000
local 9 type=int class=register scope=LOCAL offset=20 ref=0
local 24 type=int class=register scope=LOCAL offset=24 ref=0
local 35 type=int class=register scope=LOCAL offset=28 ref=0
maxoffset=32
node#3 ADDRFP count=1 r
node#2 INDIRI count=1 #3
node#5 ADDRFP count=1 r+8 (7)
node#4 INDIRI count=1 #5
node'1 GEI count=0 #2 #4 10
node#7 ADDRLP count=1 9
node#9 ADDRFP count=1 r
node#8 INDIRI count=1 #9
node'6 ASGNI count=0 #7 #8 4 4
node#11 ADDRGP count=1 11
node'10 JUMPV count=0 #11
10:
node#14 ADDRLP count=1 9
node#16 ADDRFP count=1 r+8 (8)
node#15 INDIRI count=1 #16
node'13 ASGNI count=0 #14 #15 4 4
11:
node#19 ADDRLP count=1 temp
node#21 ADDRLP count=1 9
node#20 INDIRI count=1 #21
node'18 ASGNI count=0 #19 #20 4 4
node#24 ADDRFP count=1 r+4 (13)
node#23 INDIRI count=1 #24
node#26 ADDRFP count=1 r+8+4 (15)
node#25 INDIRI count=1 #26
node'22 GEI count=0 #23 #25 19
node#28 ADDRLP count=1 9
node#30 ADDRFP count=1 r+4 (16)
node#29 INDIRI count=1 #30
node'27 ASGNI count=0 #28 #29 4 4
node#32 ADDRGP count=1 20
node'31 JUMPV count=0 #32
19:
node#35 ADDRLP count=1 9
node#37 ADDRFP count=1 r+8+4 (18)
node#36 INDIRI count=1 #37
node'34 ASGNI count=0 #35 #36 4 4
20:
node#40 ADDRLP count=1 temp+4 (12)
node#42 ADDRLP count=1 9
node#41 INDIRI count=1 #42
node'39 ASGNI count=0 #40 #41 4 4
node#3 ADDRFP count=1 r
node#2 INDIRI count=1 #3
node#5 ADDRFP count=1 r+8 (22)
node#4 INDIRI count=1 #5
node'1 LEI count=0 #2 #4 25
node#7 ADDRLP count=1 24
node#9 ADDRFP count=1 r
node#8 INDIRI count=1 #9
node'6 ASGNI count=0 #7 #8 4 4
node#11 ADDRGP count=1 26
node'10 JUMPV count=0 #11
25:
node#14 ADDRLP count=1 24
node#16 ADDRFP count=1 r+8 (23)
node#15 INDIRI count=1 #16
node'13 ASGNI count=0 #14 #15 4 4
26:
node#19 ADDRLP count=1 temp+8 (21)
node#21 ADDRLP count=1 24
node#20 INDIRI count=1 #21
node'18 ASGNI count=0 #19 #20 4 4
node#3 ADDRFP count=1 r+4 (29)
node#2 INDIRI count=1 #3
node#5 ADDRFP count=1 r+8+4 (31)
node#4 INDIRI count=1 #5
node'1 LEI count=0 #2 #4 36
node#7 ADDRLP count=1 35
node#9 ADDRFP count=1 r+4 (32)
node#8 INDIRI count=1 #9
node'6 ASGNI count=0 #7 #8 4 4
node#11 ADDRGP count=1 37
node'10 JUMPV count=0 #11
36:
node#14 ADDRLP count=1 35
node#16 ADDRFP count=1 r+8+4 (34)
node#15 INDIRI count=1 #16
node'13 ASGNI count=0 #14 #15 4 4
37:
node#19 ADDRLP count=1 temp+8+4 (28)
node#21 ADDRLP count=1 35
node#20 INDIRI count=1 #21
node'18 ASGNI count=0 #19 #20 4 4
node#3 ADDRLP count=1 6
node#2 INDIRP count=1 #3
node#5 ADDRLP count=1 temp
node#4 INDIRB count=1 #5
node'1 ASGNB count=0 #2 #4 16 4
node'1 RETV count=0
5:
end canonrect
export makepoint
function makepoint type=struct point function(int,int) class=auto scope=GLOBAL
caller's parameter x type=int class=auto scope=PARAM offset=0 ref=0
callee's parameter x type=int class=auto scope=PARAM offset=0 ref=1000
caller's parameter y type=int class=auto scope=PARAM offset=4 ref=0
callee's parameter y type=int class=auto scope=PARAM offset=4 ref=1000
local 39 type=pointer to struct point class=auto scope=LOCAL offset=0 ref=1000
local p type=struct point class=auto scope=LOCAL offset=4 ref=3000
maxoffset=12
node#2 ADDRLP count=1 p
node#4 ADDRFP count=1 x
node#3 INDIRI count=1 #4
node'1 ASGNI count=0 #2 #3 4 4
node#6 ADDRLP count=1 p+4 (40)
node#8 ADDRFP count=1 y
node#7 INDIRI count=1 #8
node'5 ASGNI count=0 #6 #7 4 4
node#3 ADDRLP count=1 39
node#2 INDIRP count=1 #3
node#5 ADDRLP count=1 p
node#4 INDIRB count=1 #5
node'1 ASGNB count=0 #2 #4 8 4
node'1 RETV count=0
38:
end makepoint
export makerect
function makerect type=struct rect function(struct point,struct point) class=auto scope=GLOBAL ncalls=1
caller's parameter p1 type=struct point class=auto scope=PARAM offset=0 ref=0
callee's parameter p1 type=struct point class=auto scope=PARAM offset=0 ref=1000
caller's parameter p2 type=struct point class=auto scope=PARAM offset=8 ref=0
callee's parameter p2 type=struct point class=auto scope=PARAM offset=8 ref=1000
local 42 type=pointer to struct rect class=auto scope=LOCAL offset=0 ref=1000
local r type=struct rect class=auto scope=LOCAL offset=4 ref=3000
maxoffset=20
node#2 ADDRLP count=1 r
node#4 ADDRFP count=1 p1
node#3 INDIRB count=1 #4
node'1 ASGNB count=0 #2 #3 8 4
node#6 ADDRLP count=1 r+8 (43)
node#8 ADDRFP count=1 p2
node#7 INDIRB count=1 #8
node'5 ASGNB count=0 #6 #7 8 4
node#3 ADDRLP count=1 r
node#2 INDIRB count=1 #3
node'1 ARGB count=0 #2 16 4
node#5 ADDRGP count=1 canonrect
node#7 ADDRLP count=1 42
node#6 INDIRP count=1 #7
node'4 CALLB count=0 #5 #6
node'1 RETV count=0
41:
end makerect
export ptinrect
function ptinrect type=int function(struct point,struct rect) class=auto scope=GLOBAL
caller's parameter p type=struct point class=auto scope=PARAM offset=0 ref=0
callee's parameter p type=struct point class=auto scope=PARAM offset=0 ref=4000
caller's parameter r type=struct rect class=auto scope=PARAM offset=8 ref=0
callee's parameter r type=struct rect class=auto scope=PARAM offset=8 ref=4000
local 52 type=int class=register scope=LOCAL offset=0 ref=0
maxoffset=4
node#3 ADDRFP count=1 p
node#2 INDIRI count=2 #3
node#5 ADDRFP count=1 r
node#4 INDIRI count=1 #5
node'1 LTI count=0 #2 #4 53
node#8 ADDRFP count=1 r+8 (46)
node#7 INDIRI count=1 #8
node'6 GEI count=0 #2 #7 53
node#11 ADDRFP count=1 p+4 (47)
node#10 INDIRI count=1 #11
node#13 ADDRFP count=1 r+4 (48)
node#12 INDIRI count=1 #13
node'9 LTI count=0 #10 #12 53
node#16 ADDRFP count=1 p+4 (49)
node#15 INDIRI count=1 #16
node#18 ADDRFP count=1 r+8+4 (51)
node#17 INDIRI count=1 #18
node'14 GEI count=0 #15 #17 53
node#20 ADDRLP count=1 52
node#21 CNSTI count=1 1
node'19 ASGNI count=0 #20 #21 4 4
node#23 ADDRGP count=1 54
node'22 JUMPV count=0 #23
53:
node#26 ADDRLP count=1 52
node#27 CNSTI count=1 0
node'25 ASGNI count=0 #26 #27 4 4
54:
node#31 ADDRLP count=1 52
node#30 INDIRI count=1 #31
node'29 RETI count=0 #30
45:
end ptinrect
segment lit
global 56 type=const struct point class=static scope=GLOBAL
defconst int 0
defconst int 0
global 57 type=const struct point class=static scope=GLOBAL
defconst int 320
defconst int 320
global 58 type=incomplete array of const struct point class=static scope=GLOBAL
defconst int -1
defconst int -1
defconst int 1
defconst int 1
defconst int 20
defconst int 300
defconst int 500
defconst int 400
segment text
export main
function main type=int function class=auto scope=GLOBAL ncalls=11
local i type=int class=register scope=LOCAL offset=0 ref=51000
local pts type=array 4 of struct point class=auto scope=LOCAL offset=4 ref=50000
local screen type=struct rect class=auto scope=LOCAL offset=36 ref=50000
local x type=struct point class=auto scope=LOCAL offset=52 ref=30000
local origin type=struct point class=auto scope=LOCAL offset=60 ref=1000
local maxpt type=struct point class=auto scope=LOCAL offset=68 ref=1000
local 59 type=struct point class=auto scope=LOCAL offset=76 ref=0
local 60 type=struct point class=auto scope=LOCAL offset=84 ref=0
local 61 type=struct point class=auto scope=LOCAL offset=92 ref=0
local 62 type=struct point class=auto scope=LOCAL offset=100 ref=0
maxoffset=108
node#2 ADDRLP count=1 origin
node#4 ADDRGP count=1 56
node#3 INDIRB count=1 #4
node'1 ASGNB count=0 #2 #3 8 4
node#2 ADDRLP count=1 maxpt
node#4 ADDRGP count=1 57
node#3 INDIRB count=1 #4
node'1 ASGNB count=0 #2 #3 8 4
node#2 ADDRLP count=1 pts
node#4 ADDRGP count=1 58
node#3 INDIRB count=1 #4
node'1 ASGNB count=0 #2 #3 32 4
node#2 CNSTI count=2 -10
node'1 ARGI count=0 #2 4 4
node'3 ARGI count=0 #2 4 4
node#5 ADDRGP count=1 makepoint
node#6 ADDRLP count=1 59
node'4 CALLB count=0 #5 #6
node#9 ADDRLP count=1 maxpt
node#8 INDIRB count=1 #9
node'7 ARGB count=0 #8 8 4
node#12 ADDRLP count=1 59
node#11 INDIRB count=1 #12
node'10 ARGB count=0 #11 8 4
node#14 ADDRGP count=1 addpoint
node#15 ADDRLP count=1 60
node'13 CALLB count=0 #14 #15
node#17 CNSTI count=2 10
node'16 ARGI count=0 #17 4 4
node'18 ARGI count=0 #17 4 4
node#20 ADDRGP count=1 makepoint
node#21 ADDRLP count=1 61
node'19 CALLB count=0 #20 #21
node#24 ADDRLP count=1 origin
node#23 INDIRB count=1 #24
node'22 ARGB count=0 #23 8 4
node#27 ADDRLP count=1 61
node#26 INDIRB count=1 #27
node'25 ARGB count=0 #26 8 4
node#29 ADDRGP count=1 addpoint
node#30 ADDRLP count=1 62
node'28 CALLB count=0 #29 #30
node#33 ADDRLP count=1 60
node#32 INDIRB count=1 #33
node'31 ARGB count=0 #32 8 4
node#36 ADDRLP count=1 62
node#35 INDIRB count=1 #36
node'34 ARGB count=0 #35 8 4
node#38 ADDRGP count=1 makerect
node#39 ADDRLP count=1 screen
node'37 CALLB count=0 #38 #39
node#2 ADDRLP count=1 i
node#3 CNSTI count=1 0
node'1 ASGNI count=0 #2 #3 4 4
node#2 ADDRGP count=1 67
node'1 JUMPV count=0 #2
64:
node#6 ADDRLP count=1 i
node#5 INDIRI count=1 #6
node#7 CNSTI count=1 3
node#4 LSHI count=2 #5 #7
node#8 ADDRLP count=1 pts
node#3 ADDP count=1 #4 #8
node#2 INDIRI count=1 #3
node'1 ARGI count=0 #2 4 4
node#12 ADDRLP count=1 pts+4 (69)
node#11 ADDP count=1 #4 #12
node#10 INDIRI count=1 #11
node'9 ARGI count=0 #10 4 4
node#14 ADDRGP count=1 makepoint
node#15 ADDRLP count=1 x
node'13 CALLB count=0 #14 #15
node#17 ADDRGP count=1 68
node'16 ARGP count=0 #17 4 4
node#23 ADDRLP count=1 i
node#22 INDIRI count=1 #23
node#24 CNSTI count=1 3
node#21 LSHI count=1 #22 #24
node#25 ADDRLP count=1 pts
node#20 ADDP count=1 #21 #25
node#19 INDIRI count=1 #20
node'18 ARGI count=0 #19 4 4
node#28 ADDRLP count=1 x+4 (70)
node#27 INDIRI count=1 #28
node'26 ARGI count=0 #27 4 4
node#30 ADDRGP count=1 printf
node'29 CALLI count=0 #30
node#3 ADDRLP count=1 x
node#2 INDIRB count=1 #3
node'1 ARGB count=0 #2 8 4
node#6 ADDRLP count=1 screen
node#5 INDIRB count=1 #6
node'4 ARGB count=0 #5 16 4
node#8 ADDRGP count=1 ptinrect
node'7 CALLI count=1 #8
node#10 CNSTI count=1 0
node'9 NEI count=0 #7 #10 71
node#2 ADDRGP count=1 73
node'1 ARGP count=0 #2 4 4
node#4 ADDRGP count=1 printf
node'3 CALLI count=0 #4
71:
node#2 ADDRGP count=1 74
node'1 ARGP count=0 #2 4 4
node#5 ADDRLP count=1 screen
node#4 INDIRI count=1 #5
node'3 ARGI count=0 #4 4 4
node#8 ADDRLP count=1 screen+4 (75)
node#7 INDIRI count=1 #8
node'6 ARGI count=0 #7 4 4
node#11 ADDRLP count=1 screen+8 (76)
node#10 INDIRI count=1 #11
node'9 ARGI count=0 #10 4 4
node#14 ADDRLP count=1 screen+8+4 (78)
node#13 INDIRI count=1 #14
node'12 ARGI count=0 #13 4 4
node#16 ADDRGP count=1 printf
node'15 CALLI count=0 #16
65:
node#2 ADDRLP count=2 i
node#4 INDIRI count=1 #2
node#5 CNSTI count=1 1
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
67:
node#4 ADDRLP count=1 i
node#3 INDIRI count=1 #4
node#2 CVIU count=1 #3
node#5 CNSTU count=1 4
node'1 LTU count=0 #2 #5 64
node#2 CNSTI count=1 0
node'1 ARGI count=0 #2 4 4
node#4 ADDRGP count=1 exit
node'3 CALLI count=0 #4
node'1 RETV count=0
55:
end main
import exit
import printf
segment lit
global 74 type=array 23 of char class=static scope=GLOBAL
defstring "within [%d,%d; %d,%d]\012\000"
global 73 type=array 5 of char class=static scope=GLOBAL
defstring "not \000"
global 68 type=array 12 of char class=static scope=GLOBAL
defstring "(%d,%d) is \000"
progend
