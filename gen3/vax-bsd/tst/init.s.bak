.data
.globl _words
.align 2; _words:.long 1
.long 2
.long 3
.byte 105
.byte 102
.byte 0
.space 3
.space 2
.long 4
.long 5
.space 4
.byte 102
.byte 111
.byte 114
.space 3
.space 2
.long 6
.long 7
.long 8
.byte 101
.byte 108
.byte 115
.byte 101
.byte 0
.space 1
.space 2
.long 9
.long 10
.long 11
.byte 119
.byte 104
.byte 105
.byte 108
.byte 101
.space 1
.space 2
.long 0
.space 8
.space 8
.globl _wordlist
.align 2; _wordlist:.long _words
.globl _x
.align 2; _x:.long 1
.long 2
.long 3
.long 4
.long 0
.long 5
.long 6
.space 12
.long 7
.space 16
.globl _y
.align 2; _y:.long _x
.long _x+20
.long _x+40
.long 0x0
.text
.globl _main
_main:.word 0x0
subl2 $64,sp
moval -8(fp),r1
movl $0,r2
movl r2,(r1)
moval L7,r1
jmp (r1)
L4:moval -4(fp),r1
movl $0,r2
movl r2,(r1)
moval L11,r1
jmp (r1)
L8:moval L12,r1
movl r1,0(sp)
moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval -8(fp),r3
movl (r3),r3
ashl r2,r3,r2
moval _y,r3
addl3 r3,r2,r2
movl (r2),r2
addl3 r2,r1,r1
movl (r1),r1
movl r1,4(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L9:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L11:moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval -8(fp),r3
movl (r3),r3
ashl r2,r3,r2
moval _y,r3
addl3 r3,r2,r2
movl (r2),r2
addl3 r2,r1,r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jneq L8
moval L13,r1
movl r1,0(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L5:moval -8(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L7:moval -8(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _y,r2
addl3 r2,r1,r1
movl (r1),r1
movl r1,r1
movl $0,r2
cmpl r1,r2; jneq L4
moval _f,r1
calls $0,(r1)
movl r0,r1
moval _wordlist,r1
movl (r1),r1
movl r1,0(sp)
moval _g,r1
calls $0,(r1)
movl r0,r1
movl $0,r1
movl r1,r0; ret
.data
.align 2; L14:.long L15
.long L16
.long L17
.long L18
.long 0x0
.text
.globl _f
_f:.word 0x0
subl2 $60,sp
moval -4(fp),r1
moval L14,r2
movl r2,(r1)
moval L22,r1
jmp (r1)
L19:moval L23,r1
movl r1,0(sp)
moval -4(fp),r1
movl (r1),r1
movl (r1),r1
movl r1,4(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L20:moval -4(fp),r1
movl (r1),r2
movl $4,r3
addl3 r3,r2,r2
movl r2,(r1)
L22:moval -4(fp),r1
movl (r1),r1
movl (r1),r1
movl r1,r1
movl $0,r2
cmpl r1,r2; jneq L19
ret
.globl _g
_g:.word 0x0
subl2 $60,sp
moval L27,r1
jmp (r1)
L24:moval -4(fp),r1
movl $0,r2
movl r2,(r1)
moval L31,r1
jmp (r1)
L28:moval L32,r1
movl r1,0(sp)
moval -4(fp),r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval 4(ap),r2
movl (r2),r2
addl3 r2,r1,r1
movl (r1),r1
movl r1,4(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L29:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L31:moval -4(fp),r1
movl (r1),r1
movl r1,r1
movl $3,r2
cmpl r1,r2; jlssu L28
moval L23,r1
movl r1,0(sp)
moval 4(ap),r1
movl (r1),r1
movl $12,r2
addl3 r2,r1,r1
movl r1,4(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L25:moval 4(ap),r1
movl (r1),r2
movl $20,r3
addl3 r3,r2,r2
movl r2,(r1)
L27:moval 4(ap),r1
movl (r1),r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jneq L24
moval _h,r1
calls $0,(r1)
movl r0,r1
ret
.globl _h
_h:.word 0x0
subl2 $72,sp
moval -4(fp),r1
movl $0,r2
movl r2,(r1)
moval L36,r1
jmp (r1)
L33:moval L37,r1
movl r1,0(sp)
movl $20,r1
moval -4(fp),r2
movl (r2),r2
mull3 r2,r1,r1
moval _words,r2
addl3 r2,r1,r2
movl (r2),r2
movl r2,4(sp)
moval _words+4,r2
addl3 r2,r1,r2
movl (r2),r2
movl r2,8(sp)
moval _words+8,r2
addl3 r2,r1,r2
movl (r2),r2
movl r2,12(sp)
moval _words+12,r2
addl3 r2,r1,r1
movl r1,16(sp)
moval _printf,r1
calls $0,(r1)
movl r0,r1
L34:moval -4(fp),r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
L36:moval -4(fp),r1
movl (r1),r1
movl r1,r1
movl $5,r2
cmpl r1,r2; jlssu L33
ret
.text 1
L37:.byte 37
.byte 100
.byte 32
.byte 37
.byte 100
.byte 32
.byte 37
.byte 100
.byte 32
.byte 37
.byte 115
.byte 10
.byte 0
L32:.byte 37
.byte 100
.byte 32
.byte 0
L23:.byte 37
.byte 115
.byte 10
.byte 0
L18:.byte 119
.byte 104
.byte 105
.byte 108
.byte 101
.byte 0
L17:.byte 101
.byte 108
.byte 115
.byte 101
.byte 0
L16:.byte 102
.byte 111
.byte 114
.byte 0
L15:.byte 105
.byte 102
.byte 0
L13:.byte 10
.byte 0
L12:.byte 32
.byte 37
.byte 100
.byte 0
