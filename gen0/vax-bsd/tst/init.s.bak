progbeg argv=../rcc 
segment data
export words
global words type=incomplete array of Word class=auto scope=GLOBAL
defconst int 1
defconst int 2
defconst int 3
defstring "if\000"
space 3
space 2
defconst int 4
defconst int 5
space 4
defstring "for"
space 3
space 2
defconst int 6
defconst int 7
defconst int 8
defstring "else\000"
space 1
space 2
defconst int 9
defconst int 10
defconst int 11
defstring "whil"
defstring "e"
space 1
space 2
defconst int 0
space 8
space 8
export wordlist
global wordlist type=pointer to Word class=auto scope=GLOBAL
defaddress words
export x
global x type=incomplete array of array 5 of int class=auto scope=GLOBAL
defconst int 1
defconst int 2
defconst int 3
defconst int 4
defconst int 0
defconst int 5
defconst int 6
space 12
defconst int 7
space 16
export y
global y type=incomplete array of pointer to int class=auto scope=GLOBAL
defaddress x
defaddress x+20
defaddress x+40
defconst void* 0x0
segment text
export main
function main type=int function class=auto scope=GLOBAL ncalls=4
local j type=int class=register scope=LOCAL offset=0 ref=310000
local i type=int class=register scope=LOCAL offset=4 ref=221000
maxoffset=8
node#2 ADDRLP count=1 i
node#3 CNSTI count=1 0
node'1 ASGNI count=0 #2 #3 4 4
node#2 ADDRGP count=1 8
node'1 JUMPV count=0 #2
5:
node#2 ADDRLP count=1 j
node#3 CNSTI count=1 0
node'1 ASGNI count=0 #2 #3 4 4
node#2 ADDRGP count=1 12
node'1 JUMPV count=0 #2
9:
node#2 ADDRGP count=1 13
node'1 ARGP count=0 #2 4 4
node#8 ADDRLP count=1 j
node#7 INDIRI count=1 #8
node#9 CNSTI count=2 2
node#6 LSHI count=1 #7 #9
node#14 ADDRLP count=1 i
node#13 INDIRI count=1 #14
node#12 LSHI count=1 #13 #9
node#15 ADDRGP count=1 y
node#11 ADDP count=1 #12 #15
node#10 INDIRP count=1 #11
node#5 ADDP count=1 #6 #10
node#4 INDIRI count=1 #5
node'3 ARGI count=0 #4 4 4
node#17 ADDRGP count=1 printf
node'16 CALLI count=0 #17
10:
node#2 ADDRLP count=2 j
node#4 INDIRI count=1 #2
node#5 CNSTI count=1 1
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
12:
node#6 ADDRLP count=1 j
node#5 INDIRI count=1 #6
node#7 CNSTI count=2 2
node#4 LSHI count=1 #5 #7
node#12 ADDRLP count=1 i
node#11 INDIRI count=1 #12
node#10 LSHI count=1 #11 #7
node#13 ADDRGP count=1 y
node#9 ADDP count=1 #10 #13
node#8 INDIRP count=1 #9
node#3 ADDP count=1 #4 #8
node#2 INDIRI count=1 #3
node#14 CNSTI count=1 0
node'1 NEI count=0 #2 #14 9
node#2 ADDRGP count=1 14
node'1 ARGP count=0 #2 4 4
node#4 ADDRGP count=1 printf
node'3 CALLI count=0 #4
6:
node#2 ADDRLP count=2 i
node#4 INDIRI count=1 #2
node#5 CNSTI count=1 1
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
8:
node#7 ADDRLP count=1 i
node#6 INDIRI count=1 #7
node#8 CNSTI count=1 2
node#5 LSHI count=1 #6 #8
node#9 ADDRGP count=1 y
node#4 ADDP count=1 #5 #9
node#3 INDIRP count=1 #4
node#2 CVPU count=1 #3
node#10 CNSTU count=1 0
node'1 NEI count=0 #2 #10 5
node#2 ADDRGP count=1 f
node'1 CALLI count=0 #2
node#3 ADDRGP count=1 wordlist
node#2 INDIRP count=1 #3
node'1 ARGP count=0 #2 4 4
node#5 ADDRGP count=1 g
node'4 CALLI count=0 #5
node#2 CNSTI count=1 0
node'1 RETI count=0 #2
4:
end main
segment data
global keywords type=incomplete array of pointer to char class=static scope=LOCAL
defaddress 16
defaddress 17
defaddress 18
defaddress 19
defconst void* 0x0
segment text
export f
function f type=int function class=auto scope=GLOBAL ncalls=1
local p type=pointer to pointer to char class=register scope=LOCAL offset=0 ref=31000
maxoffset=4
node#2 ADDRLP count=1 p
node#3 ADDRGP count=1 keywords
node'1 ASGNP count=0 #2 #3 4 4
node#2 ADDRGP count=1 23
node'1 JUMPV count=0 #2
20:
node#2 ADDRGP count=1 24
node'1 ARGP count=0 #2 4 4
node#6 ADDRLP count=1 p
node#5 INDIRP count=1 #6
node#4 INDIRP count=1 #5
node'3 ARGP count=0 #4 4 4
node#8 ADDRGP count=1 printf
node'7 CALLI count=0 #8
21:
node#2 ADDRLP count=2 p
node#4 INDIRP count=1 #2
node#5 CNSTI count=1 4
node#3 ADDP count=1 #4 #5
node'1 ASGNP count=0 #2 #3 4 4
23:
node#5 ADDRLP count=1 p
node#4 INDIRP count=1 #5
node#3 INDIRP count=1 #4
node#2 CVPU count=1 #3
node#6 CNSTU count=1 0
node'1 NEI count=0 #2 #6 20
node'1 RETV count=0
15:
end f
export g
function g type=int function class=auto scope=GLOBAL ncalls=3
caller's parameter p type=pointer to Word class=auto scope=PARAM offset=0 ref=0
callee's parameter p type=pointer to Word class=register scope=PARAM offset=0 ref=330000
local i type=int class=register scope=LOCAL offset=0 ref=310000
maxoffset=4
node#2 ADDRFP count=1 p
node#4 ADDRFP count=1 p
node#3 INDIRP count=1 #4
node'1 ASGNP count=0 #2 #3 4 4
node#2 ADDRGP count=1 29
node'1 JUMPV count=0 #2
26:
node#2 ADDRLP count=1 i
node#3 CNSTI count=1 0
node'1 ASGNI count=0 #2 #3 4 4
node#2 ADDRGP count=1 33
node'1 JUMPV count=0 #2
30:
node#2 ADDRGP count=1 34
node'1 ARGP count=0 #2 4 4
node#8 ADDRLP count=1 i
node#7 INDIRI count=1 #8
node#9 CNSTI count=1 2
node#6 LSHI count=1 #7 #9
node#11 ADDRFP count=1 p
node#10 INDIRP count=1 #11
node#5 ADDP count=1 #6 #10
node#4 INDIRI count=1 #5
node'3 ARGI count=0 #4 4 4
node#13 ADDRGP count=1 printf
node'12 CALLI count=0 #13
31:
node#2 ADDRLP count=2 i
node#4 INDIRI count=1 #2
node#5 CNSTI count=1 1
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
33:
node#4 ADDRLP count=1 i
node#3 INDIRI count=1 #4
node#2 CVIU count=1 #3
node#5 CNSTU count=1 3
node'1 LTU count=0 #2 #5 30
node#2 ADDRGP count=1 24
node'1 ARGP count=0 #2 4 4
node#6 ADDRFP count=1 p
node#5 INDIRP count=1 #6
node#7 CNSTI count=1 12
node#4 ADDP count=1 #5 #7
node'3 ARGP count=0 #4 4 4
node#9 ADDRGP count=1 printf
node'8 CALLI count=0 #9
27:
node#2 ADDRFP count=2 p
node#4 INDIRP count=1 #2
node#5 CNSTI count=1 20
node#3 ADDP count=1 #4 #5
node'1 ASGNP count=0 #2 #3 4 4
29:
node#4 ADDRFP count=1 p
node#3 INDIRP count=1 #4
node#2 INDIRI count=1 #3
node#5 CNSTI count=1 0
node'1 NEI count=0 #2 #5 26
node#2 ADDRGP count=1 h
node'1 CALLI count=0 #2
node'1 RETV count=0
25:
end g
export h
function h type=int function class=auto scope=GLOBAL ncalls=1
local i type=int class=register scope=LOCAL offset=0 ref=61000
maxoffset=4
node#2 ADDRLP count=1 i
node#3 CNSTI count=1 0
node'1 ASGNI count=0 #2 #3 4 4
node#2 ADDRGP count=1 39
node'1 JUMPV count=0 #2
36:
node#2 ADDRGP count=1 40
node'1 ARGP count=0 #2 4 4
node#7 CNSTI count=1 20
node#9 ADDRLP count=1 i
node#8 INDIRI count=1 #9
node#6 MULI count=4 #7 #8
node#10 ADDRGP count=1 words
node#5 ADDP count=1 #6 #10
node#4 INDIRI count=1 #5
node'3 ARGI count=0 #4 4 4
node#14 ADDRGP count=1 words+4 (41)
node#13 ADDP count=1 #6 #14
node#12 INDIRI count=1 #13
node'11 ARGI count=0 #12 4 4
node#18 ADDRGP count=1 words+8 (42)
node#17 ADDP count=1 #6 #18
node#16 INDIRI count=1 #17
node'15 ARGI count=0 #16 4 4
node#21 ADDRGP count=1 words+12 (43)
node#20 ADDP count=1 #6 #21
node'19 ARGP count=0 #20 4 4
node#23 ADDRGP count=1 printf
node'22 CALLI count=0 #23
37:
node#2 ADDRLP count=2 i
node#4 INDIRI count=1 #2
node#5 CNSTI count=1 1
node#3 ADDI count=1 #4 #5
node'1 ASGNI count=0 #2 #3 4 4
39:
node#4 ADDRLP count=1 i
node#3 INDIRI count=1 #4
node#2 CVIU count=1 #3
node#5 CNSTU count=1 5
node'1 LTU count=0 #2 #5 36
node'1 RETV count=0
35:
end h
import printf
segment lit
global 40 type=array 13 of char class=static scope=GLOBAL
defstring "%d %d %d %s\012\000"
global 34 type=array 4 of char class=static scope=GLOBAL
defstring "%d \000"
global 24 type=array 4 of char class=static scope=GLOBAL
defstring "%s\012\000"
global 19 type=array 6 of char class=static scope=GLOBAL
defstring "while\000"
global 18 type=array 5 of char class=static scope=GLOBAL
defstring "else\000"
global 17 type=array 4 of char class=static scope=GLOBAL
defstring "for\000"
global 16 type=array 3 of char class=static scope=GLOBAL
defstring "if\000"
global 14 type=array 2 of char class=static scope=GLOBAL
defstring "\012\000"
global 13 type=array 4 of char class=static scope=GLOBAL
defstring " %d\000"
progend
